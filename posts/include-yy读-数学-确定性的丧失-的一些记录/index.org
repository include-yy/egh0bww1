#+SETUPFILE: ../../setup.org
#+TITLE: 读《数学：确定性的丧失》有感
#+TITLE:
#+DATE: [2021-10-20 Wed 20:59]
#+TAGS: essay

* 起因

某日在准备学习 elisp 的面向对象系统 eieio 时，我发现虽然文档能够让我明白 =defclass= 等一系列函数/宏的使用，但是我没有能力找到它们的用武之地。

一方面，我在面向对象编程方面的经验几乎为 0，基本上就是了解了所谓的面向对象三要素，即封装继承多态。另一方面，我对于面向对象的有效性抱有怀疑，这大概是因为我看了[[https://www.zhihu.com/question/20275578/answer/26577791][这篇文章]]。从支持面向对象的文章到反对面向对象的观点我都看过，但我个人的编程经验不足以让我做出让自己满意的认识。

本着“做中学”的理念，我还是先去学学各大主流语言中的面向对象用法吧。但我是从 C++ 开始还是 Java 开始呢？学完了主流的用法就学会了面向对象吗？也许我应该从面向对象刚刚被发明的时候开始，了解一下面向对象最初的意思和它的发展过程，这样应该可以对它有一个全面而笃定的认识了。但对此我又有了另外一个问题，我学习了面向对象从出生到现在的发展历史，我就一定能完全掌握面向对象的一切吗？以我的精力时间和能力是不可能读完从上世纪到现在与面向对象相关的论文的，更何况新的面向的对象方法也在不断的发展中。那么面向对象有没有什么根本的东西是一直不变的呢？我是否可以由这个东西作为认识面向对象的基础呢？

想到这里我不由得联想到了数学，数学里面是有所谓公理的存在的，根据公理可以推出一系列的定理，也许你得不到某个定理，但是通过定理的证明过程你是可以知道它的正确与否的。目前我也懂了一点点数学，什么工科三大数学课，复变函数等等，但是这只能算是知其然而不知其所以然，日常学习我能做到会用就满足了我的需求，
