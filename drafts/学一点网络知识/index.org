#+SETUPFILE: ../../setup.org
#+TITLE: 学一点网络知识
#+TITLE: @@html:<div class="yyheadimg"><img src="./aHR0cHM6Ly93d3cucGl4aXYubmV0L2FydHdvcmtzLzgyMDA2NzQ3.png" alt="load failed"></div>@@
#+DATE: [2022-12-19 Mon 02:47]
#+TAGS: blog
#+OPTIONS: toc:3

原本我准备在介绍完数据库后介绍 PHP，然后结束掉 LAMP 的搭建，但在此之前我们还是先学一些网络知识，不然 PHP 感觉没法讲了。我原本准备在介绍 HTTP 服务器时顺便说一下网络，试了一下发现内容太多了，正好都放在这篇文章里。就搭博客这个目的来说，我们只需要学习 HTTP 协议的简单知识即可，不需要关注应用层以下的东西，但光是会用又感觉对网络的认知很模糊，还是顺便介绍一下吧。

本文会对计算机网络做一个简单但是全面的介绍，这应该能代表目前我对网络最高水平的认识。计算机网络不是一篇文章可以讲完的东西，但简单了解还是勉强做得到的。如果你完全没有了解过网络知识，希望你能通过这些文章学到一些基础。部分或完全看不懂也没事，在网络上总能找到适合你的教程。

本人并不是什么计算机网络专家，只是简单翻过两三本教材和看过一些科普文章而已。如果你发现了文中的错误，欢迎告诉我，我会及时改正。

本文及后续文章主要参考了以下四本教材：

- 《计算机网络 自顶向下方法 第七版》 —— James F. Kurose, Keith W. Ross
- 《计算机网络(第七版)》 —— 谢希仁
- 《计算机网络与通信》 —— 佟震亚，杨风暴
- 《数据通信与网络 第四版》 —— Behrouz A. Forouzan, Sophia Chung Fegan

需要引用书中内容时，我会分别将它们简称为：《自顶向下》，《谢希仁》，《杨风暴》，《第四版》。几乎所有的教材都采用了总分式结构，在开头的一章或两章介绍网络的总体结构，在后续章节中介绍网络中不同层的细节，本系列也采用这种结构。

* 我们需要多少（网络）知识

对我们大多数人来说，网络也许就是手机上的 WIFI 和流量按钮，知道怎么连 WIFI 和热点已经足够解决 99% 的问题了。通过网络我们可以与他人交流，获取文字、音频、视频等资源，玩网络游戏，进行网上交易，等等。我们只管连网，剩下的交给想象中的妖精吧：

| [[./2.png]] |

这样想象出的数据传输妖精甚至都是多余的，我们完全不需要动脑子，只管连上网就行。如果有人问起你对网络的认识，回答“上帝的伟力”即可。可惜现实远比这要复杂，为了让房间里充满 WIFI 信号，你可能不得不使用一种叫做“路由器”的东西；为了网络更稳定一点，你可能需要使用昂贵的高性能路由器，或是使用网线；如果电脑没有网口就需要购买 PCIE 或 USB 网卡；为了使用远程桌面你还得了解什么是 IP 和端口号；为了更低的游戏延迟你可能需要购买游戏加速器；为了走向世界你可能需要...... 把工作交给上帝是不靠谱的，名为需求的魔鬼会把上面的简单想象撕个稀巴烂。

我们需要了解多少网络知识取决于我们需要什么样的网络功能，需求会强迫我们了解更多知识和细节来解决面对的问题。但把学习知识用于解决问题似乎又太狭隘了一点，有些时候我们学点东西会感到很乐，学到的知识满足了我们的求知欲。不同的人进行学习的驱动力可能不太一样。

根据那啥亚伯拉罕·马斯洛的需求层次理论， *动机* 是由多种不同层次和性质的 *需求* 所组成的，各种需求间有高低层次与顺序之分，每个层次的需求与满足的程度将决定个体的人格发展境界：

| [[./1.png]] |

学生学网络可能是基于“安全”的需要，网络工程师学它是为了解决问题，像我这样的闲散人员学它可能只是在自我满足。对于处在不同层次的人来说学习网络的意义可能是完全不同的，但在不同的驱动力下却做了同一件事，那就是 *追求欲望的被满足* 。

我们需要多少知识完全取决于我们自己，当我们感觉到想要学的时候就去学吧，如果学不进去可能只是当前的欲望不够强烈而已，也许以后会有机会的。

如果你认为人的一生是完全确定的那就更不用担心学什么了（笑）。

* 什么是计算机网络

在现代汉语词典第七版中对计算机网络、互联网和因特网的定义是这样的：

#+BEGIN_QUOTE
【计算机网络】 用通信线路把若干台计算机互相连接起来，用来实现资源共享和信息交换的系统

【互联网】 由若干计算机网络相互连接而成的网络

【因特网】 目前全球最大的一个计算机互联网，是由美国的阿帕（ARPA）网发展演变而来的
#+END_QUOTE

【计算机网络】定义的前半段描述了计算机网络的形状：由通信线路 *互相* 连接的计算机组成的系统，后半段描述了计算机网络的功能，即 *信息* 的交换和 *资源* 的共享。【互联网】词条将“互联网”定义为由计算机网络组成的网络。【因特网】则指全球最大的计算机互联网，因特网应该是直接由 Internet 音译而来。

我也查了一下 /computer network/ 和 /Internet/ 的英文释义：

#+BEGIN_QUOTE
【[[https://en.wikipedia.org/wiki/Computer_network][computer network]]】 A computer network is a set of computers sharing resources located on or provided by network nodes

【[[https://en.wikipedia.org/wiki/Internet][Internet]]】 The Internet (or internet) is the *global* system of *interconnected computer networks* that uses the Internet protocol suite (TCP/IP) to communicate between networks and devices. It is a network of networks that consists of private, public, academic, business, and government networks of local to global scope, linked by a broad array of electronic, wireless, and optical networking technologies.
#+END_QUOTE

如果仅仅根据互联网的中文释义来看的话，互联网一词并没有强调互联的规模，那么是否不论大小的任意两个网络互连也算是互联网？事实似乎并非如此，你应该看到过“您尚未接入互联网”之类的提示，维基百科的 Internet 词条的中文版使用的也是[[https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91][互联网]]。在《谢希仁》中还可以看到 *互连网* 这样的词，用它对应 internet 而用互联网对应 Internet，但似乎字典还未收录。我倾向认为字典的定义过时了。

至于 internet 与 Internet 的区别，internet 对应于上面字典定义的【互联网】，Internet 对应于字典中的【因特网】。下文中出现的互联网和因特网均指最大的全球互连计算机网络。

资源共享和信息交换这两项功能对我们来说应该比较熟悉，毕竟我们几乎无时不刻都在通过计算机设备与互联网世界保持联系，我们通过网络与他人即时通讯，通过网络获取文本音频视频资源。这里我们的重点是了解网络是如何 *连接* 以及如何 *实现* 通信的，我们需要一个比上一节中的图更具体的认识。信息交换与资源共享属于网络的应用，我会在后面进行简单介绍。

** 网络的组成

#+BEGIN_QUOTE
因特网是一个世界范围的计算机网络，即它是一个互联了遍及全世界数十亿计算设备的网络。在不久前，这些计算设备多数是传统的桌面 PC、Linux 工作站以及所谓的服务器（它们用于存储和传输 Web 页面和电子邮件报文等信息）。然而，越来越多的非传统的因特网“物品”（如便携机、智能手机、平板电脑、电视、游戏机、温度调节装置、家用安全系统、家用电器、手表、眼镜、汽车、运输控制系统等）正在与因特网相连。的确，在许多非传统设备连接到因特网的情况下，计算机网络（computer network）这个术语开始听起来有些过时了。用因特网术语来说，所有这些设备都称为主机（host）或端系统（end system）。

据估计，到 2015 年有大约 50 亿台设备与因特网连接，而到 2020 年该数字将达 250 亿 [Gartner 2014]。2015 年，全世界已有超过 32 亿因特网用户，接近世界人口的 40% [ITU 2015]。

—— 《自顶向下》1.1.1
#+END_QUOTE

就像引文说的那样，我们日常使用的一些设备被叫做“端系统”，端系统通过 ISP（Internet Service Provicer，因特网服务提供商）接入因特网。国内我们比较熟悉的 ISP 有移动联通电信御三家，此外我记得家里还用过网通的宽带，也听同学用过铁通，不过这些 ISP 已经成为过去时了（笑）。在二〇〇八年，铁通移动合并为新移动，电信联通网通经过合并成为新电信和新网通：

| [[./21.jpg]] |

端系统位于互联网的“边缘”，它们不负责连接网络，而是利用网络提供的服务。我见过一个非常形象的类比：如果把网络比作渔网，那么端系统就像是渔网边上挂着的铅坠。端系统就像是拉一根线到电线上偷电，它不关心整个网络的结构。

与边缘相对的自然是核心，核心网（Core Network）将各个网络相互连接起来，使得不同的局域网或子网之间能够进行信息交换，它也叫做骨干网（backbone network）。我国的三大运营商都有自己覆盖全国的骨干网，除了御三家骨干网之外还有教育网，科技网，长城互联网等等，读者可以查询相关资料来进一步了解。

将端系统与骨干网连接起来的网络叫做接入网（Access Network），它指骨干网到端系统之间的所有设备。《自顶向下》1.2.1 将其定义为将端系统物理连接到其边缘路由器（edge router）的网络。接入网的接入方式包括电话线接入、光纤接入、同轴电缆接入和无线接入等方式。

到了这里，相比于上一节中的 Internet 云朵我们有了一个稍具体的认识，端系统通过接入网连接互联网，接入网和骨干网组成了通信网络。我们可以把上面的云图改成一个简陋的枣糕模型：

| [[./22.png]] |

端系统属于网络的一部分吗？这个问题倒是很简单，接入网络后端设备就是网络的一部分了。

** 我们是怎么连上网的

对接入方式和物理媒体的介绍构成了《自顶向下》1.2 节网络边缘的全部内容，这里我也和《自顶向下》保持一致来介绍一下接入网，顺便简单讲讲自己的上网经历。

现在（2023）已经是光纤以太网和 5G 移动网络的时代了，我们可以很方便地使用手机连接蜂窝网络，使用家里的无线路由器或直接使用网线来访问互连网。就我自己的印象来说，十几年前连网没这么容易，而且网速也远不如现在。如果我们的年龄差不超过十岁，你可能见到过这样的宽带连接界面：

| [[./20.png]] |

我最早大概是在〇七年还是〇八年第一次看到这样的窗口，但是记忆已经非常模糊了，也不知用没用过更老的拨号上网。那时的网速大概是在 2 Mbps 左右，下个几十兆的游戏都要五分钟左右，几百兆的影视资源差不多要一两小时，这还得是在网络稳定的情况下。下载的时候总是要盯着，一旦速度降下来了就暂停再开始，只能说懂得都懂。从〇八年到一五年似乎还经历过一次还是几次网络提速降费，但这一时间段我似乎没什么关于网络的印象了，从一三还是一四年开始平时也就打打 CS online 和 LOL 而已。

一五年我家换了新的套餐，记得当时家里新装了个白色的盒子。我第一次在电脑上看到了以太网三个字，记得 Win10 也是这一年发布的。高中三年我就几乎和网络隔绝了（笑）。一八年进入大学，记得校园网的网速在百兆左右，一个 GB 好像是一块。大二还是大三有过一次提速降费，成了十元 100GB 流量的百兆网络套餐。校园网一到晚上就卡的不行，只记得大四在学校的最后几天网速非常不错，毕竟人都走光了。大学期间再回到家，白色盒子又变成了光纤猫路由一体机，听家里人说是流量套餐送的百兆宽带，随手找了张网图，大概是这样：

| [[./23.jpg]] |

从最开始六七百一年的网费到现在用流量套餐就送宽带，从 2Mbps 不到的小水管到现在的百兆、千兆甚至万兆光纤，从下载几小时到几秒结束，不得不说这变化还是挺大的。

嗯，扯得好像有些远了，不管是拨号上网，宽带上网还是光纤入户，又或者是手机的移动上网，它们都需要通过接入网来访问互联网。下面让我们以出现时间为顺序对它们做一个简单的介绍。阮一峰有篇文章对带宽进化的历史做了简单介绍：[[https://www.ruanyifeng.com/blog/2022/02/10g-ethernet.html][万兆家庭网络的时代]]。

*** 拨号上网

参考[[https://zh.wikipedia.org/zh-cn/%E6%92%A5%E8%99%9F%E9%80%A3%E7%B7%9A][维基百科]] ，拨号上网指的是通过本地电话线连接互联网，在 1990 年代网络刚兴起时比较普及，但因收费昂贵、速度慢，逐渐被 ADSL 连线取代。我似乎没有听到过拨号上网的连线音，也没有在电脑上看到过拨号上网的窗口界面。下图是拨号上网的窗口界面和一则[[http://finance.sina.com.cn/g/20060117/23142283848.shtml][旧闻]]：

| [[./24.png]] |

我在网上搜到了一些过去的报告，比如 2009 年 1 月的第二十三次[[http://www.cac.gov.cn/files/pdf/hlwtjbg/hlwlfzzkdctjbg023.pdf][《中国互联网络发展状况统计报告》]] ，这里摘取一部分：

#+BEGIN_QUOTE
- 截至 2008 年 12 月 31 日，中国网民规模达到 2.98 亿人，普及率达到 22.6%，超过全球平均水平；网民规模较 2007 年增长 8800 万人，年增长率为 41.9%。中国网民规模依然保持快速增长之势。

- *宽带网民规模达到 2.7 亿人，占网民总体的 90.6%。*

- 手机上网网民规模达到 11760 万人，较 2007 年增长了 133%。
#+END_QUOTE

可见〇九年宽带上网已占绝大多数。其他时间的《中国互联网络发展状况统计报告》可以在 CNNIC 官网的[[http://www.cnnic.net.cn/6/86/88/index1.html][统计报告]]页面下载。之后的报告我没有细看，不过自从第二十四次之后似乎就没有拨号上网的占比了。拨号上网的日子对我来说是完全陌生的，这里我也只能找点资料简单描述下了。

拨号上网依托于电信运营商传统的固定电话网络 PSTN（Public Switched Telephone Network，公共交换电话网络）为用户提供 Internet 接入。由于电话线中传输的是模拟信号，所以还需要拨号（Dial-up）调制解调器（modulator-demodulator，modem ，也就是猫， *魔电* ），它的作用是进行数字/模拟信号的变换，在发送端通过调制将数字信号转换为模拟信号，在接收端通过解调再将模拟信号转换为数字信号。下图是一只窄带猫的图片：

| [[./26.png]] |

如果你很熟悉串口，你就应该对左图中的 TxD, RxD, DTR, DSR, RTS, CTS 等标志和右图的 RS232C 很熟悉。右图的 Line 接口连电话线，232 串口连计算机，这样的上网方式也叫 *串口上网* 。除了这种外置的猫也有插在电脑 PCI 接口上的内置猫，我在淘宝上找到了这样的猫：

| [[./27.jpg]] |

注意到图中的传真了吗？也许现在还能看到这样的卡还得多亏了传真机（笑）。用在传真机上的 modem 也叫传真猫，现在的很多都是 USB 接口了，以 Fax modem 为关键字应该能找到不少。

拨号上网的重点自然是在拨号上。上网是要花钱的，而且在网络刚在中国出现时还价格不菲，为了用上网还需要一个认证过程。这方面我自然也是经验匮乏，不过我不会不代表没有人会，知乎上的这一篇[[https://www.zhihu.com/question/48988005/answer/114340915][回答]]介绍了整个拨号上网过程，这里简单引用一下。这篇回答介绍了从拨号上网到现在的光纤入户的接入网，值得一读：

#+BEGIN_QUOTE
拨号上网过程如下：

- 拨一个号码如 163，用户电话线会接入局端 163 网关，这个网关一个接口位于电话网络 PSTN，用于终结（termination）163 电话；有另一个接口位于 IP 网络，通向 Internet。于是在用户电话与 163 网关之间就动态创建了一条虚电路，即 VC（Virtual Circuit）。

- 用户的拨号软件在 VC 上发 PPP/LCP，用于协商两端的 MRU（Maximum Receive Unit），以及用何种认证方式（PAP or CHAP）来认证用户，假定协商的认证方式为 PAP（Passwod Authentication Protocol）。

- 用户发 PPP/PAP + Password 来表明自己的身份，网关成功认证用户，进入下一个阶段 PPP/IPCP。

- PPP/IPCP（IP Control Protocol），用于给用户电脑分配IP地址、网络掩码、缺省网关、首席 DNS 服务器、备份 DNS 服务器，完成此过程，用户就可以上网冲浪了。

至于双向的路由如何通，曾经说过，在 Internet 世界，IP 地址由谁来分配，谁就负责双向的路由通达。163 网关来全权负责双向的路由的分发：将分配给用户的 IP，汇总（IP summary prefix）通告给 Internet gateway，同时动态生成一条指向用户虚接口 VA（Virtual Access）的一条主机（子网掩码/32）路由，这个 VA 接口是 PPP 协议动态创建的。这种上网带宽为 56 Kbps。
#+END_QUOTE

虽然拨号上网早已是淘汰的技术，但难免有人会出于兴趣爱好或怀旧的目的来重现拨号的过程，使用 *拨号上网* 或 *串口上网* 做关键字可以搜到不少的文章或视频，这里简单推荐几个：

- [[https://www.bilibili.com/video/BV1QE411p7qx/][我倒，你也网上冲浪啊！通过电话线联网教程（上）]]
- [[https://www.bilibili.com/video/BV1G4411m7Rv/][【DRの死宅技术馆】01 电话线拨号上网 怀旧的上网方式 实录拨号音]]
- [[https://www.bilibili.com/video/BV1414y147cS/][上个世纪的拨号上网在2022年的使用体验【附科普】]]
- [[https://lantian.pub/article/modify-computer/raspberry-pi-3b-ppp-dial-ethernet.lantian/][树莓派 3B 折腾笔记：串口拨号上网]]
- [[https://lantian.pub/article/modify-computer/atduck-emulate-modem-dialup-retro.lantian/][（怀旧）ATduck 虚拟 Modem 拨号上网]]
- [[https://en.wikipedia.org/wiki/Dial-up_Internet_access][Dial-up Internet access]] 可以在维基百科中听到各种各样的拨号音

使用电话线上网的最高速度是 56 Kbps，也就是 7 KB/s。在上网时是不能打电话的，这是因为上网占用了电话的信道。电话线数据传输取 600~3000Hz（美国貌似是 300~3400Hz）频带，带宽为 2400Hz，拨号上网使用的频率和电话的频段一样。

在这一节的最后让我们了解一下电话线这种传输介质。电话线就是电话的进户线，连接到电话机上才能打电话。参考[[https://baike.baidu.com/item/%E7%94%B5%E8%AF%9D%E7%BA%BF/3133982][百度百科]]，电话线的常见规格有二芯和四芯，导体的材料有铜包钢、铜包铝和全铜三种。电话线的实物图如下：

| [[./28.png]] |

电话线的接头看起来和网线接头有点像，这种接头叫做 RJ11 水晶头，只有四根针脚，网线中的水晶头叫 RJ45。

虽然拨号上网已经被淘汰了，但是一些名字一直留到了现在，比如拨号和猫。与拨号上网相关的还有 [[https://zh.wikipedia.org/wiki/%E7%BB%BC%E5%90%88%E4%B8%9A%E5%8A%A1%E6%95%B0%E5%AD%97%E7%BD%91][ISDN]]（Integrated Services Digital Network，综合业务数字网），这里就不展开介绍了。

*** 宽带上网

在上一节中我提到了一个词：“窄带”。这里的窄指的是信号频率的窄。宽带比窄带宽的地方就在于它的频率范围更宽。根据[[https://baike.baidu.com/item/%E5%AE%BD%E5%B8%A6%E7%AA%84%E5%B8%A6/10618748][百度百科]]的说法，带宽不到 4M 一概称为窄带，只有 4M 或以上才能被称为宽带（注意这里的 M 单位是 Hz 而不是 bps）。宽带上网并不像拨号上网那样局限于电话线这一种介质，它可以是通过电话线，同轴电缆，网线和下一节介绍的光纤来接入。

相比于拨号上网，同样使用电话线的 DSL（Digital Subscriber Line，数字用户线路）能够做到一边打电话一边上网，而不会出现上网时打不了电话的情况。这是因为 DSL 使用了远高于电话频段的频率来传输网络信号，这样电话和网络就不会发生冲突。下图是一只 ADSL 猫，Line 一端接电话线入口，DSL 和 Phone 接计算机和电话，分别提供网络和电话功能：

| [[./25.jpg]] |

DSL 与拨号上网的另一不同是 DSL 只是从用户到 DSLAM（Digital Subscriber Line Access Multiplexer，数字用户线接入复用器）使用电话线连接，DSLAM 与 ISP 的连接使用的是数字信号，而拨号上网还是在使用电话线连接到 ISP。两者区别如[[https://en.wikipedia.org/wiki/Digital_subscriber_line][下图]]所示：

| [[./29.png]] |

DSL 技术种类很多，有 ADSL，HDSL，RADSL，SDSL，VDSL，VDSL2 等，它们统称 xDSL。其中在接入网中用的最多的可能是 ADSL（出现于 1999 年），其中的 A 是非对称（Asymmetric）的意思。它最高允许 8 Mbps 的下行速度和 1 Mbps 的上行速度，随后也推出了 ADSL2（12 Mbps）和 ADSL2+（24 Mbps）。

除了使用电话线外，也有使用有线电视（cable television，CATV）来做接入网的方法。它利用有线电视铺设的 *同轴电缆* 进行数据信号的传递，具有频带宽、容量大、多功能、成本低、抗干扰能力强等优势。同轴电缆与光缆配合称为 HFC（Hybrid fiber-coaxial，混合光纤同轴电缆），采用光纤作为传输干线，同轴电路作分配传输网。光缆铺设到小区，然后通过光电转换节点，利用有线电视的树形同轴电缆网络连到终端用户。

| [[./30.png]] |

DOCSIS（Data-Over-Cable Service Interface Specifications，有线电缆数据服务接口规范）是一个由有线电缆自主 CableLabs 制定的国际标准，它定义了在有线电缆上提供数据服务所需的通信和运营支撑的接口，使在现有 CATV 系统上进行高速数据通信成为可能，它被许多有线电视运营商采用在现有 HFC 的基础上提供互联网接入。最新的 DOCSIS4.0（2017 年）允许 10G bps 的下行速度和 6 Gbps 的上行速度。

在我查资料的过程中我还发现了一种叫做 PLC（Power-Line communication，电力线通信）的技术，它利用既有电力线，将数据或信息以数字信号处理方法进行传输。使用 PLC 技术基本上不需要重新铺设网络线路，且电力线路覆盖地区范围远大于其他载体的线路。不过既然我不查资料都找不到它，那说明 PLC 可能在大多数场合被淘汰了（笑）。[[http://www.hkdltx.com/news/3.html][这个网页]]中列出了 PLC 的缺点，这里简单摘几条：

- 配电变压器对电力载波信号有阻隔作用，电力载波信号只能在一个配电变压器区域范围传送
- 三相电力线间有很大的信号损失（10 dB ~ 30 dB）。一般电力载波信号只能在单相电力线上传输
- 不同信号耦合方式对电力载波信号损失不同
- 电力线存在本身固有脉冲干扰。目前使用交流电有 50 Hz 和 60 Hz，在每一交流周期中出现两次峰值，两次峰值会带来两次脉冲干扰
- 电力线对载波信号造成高削减。当电力线上负载很重时，线路阻抗可达 1 欧姆以下，造成对载波信号的高削减

对于宽带上网我这里介绍了三种接入方式，分别是 xDSL、HFC 和 PLC，卫星上网我没有讲，它离我们的生活实在是太远了。光纤当然也算是一种宽带上网方式，但它值得我单独拿一节出来讲讲。

*** 光纤入户

光纤入户的英文缩写是 FTTH，也就是 Fiber to The Home。FTTx 是 Fiber to The x 的缩写，是各种光纤通讯网络的总称。除了 FTTH 外，其他的 FTTx 还有 FTTN（光纤到节点(node)），FTTE（光纤到交换机(exchange)），FTTB（光纤到大楼(building)），FTTP（光纤到房屋(premises)），等等。维基百科上有一张[[https://zh.wikipedia.org/wiki/FTTx][图]]描述了各 FTTx 的区别：

| [[./32.png]] |

光纤在接入网中的应用比我想象的还要早，这个 2001 年的[[https://tech.sina.com.cn/c/2001-08-16/5181.html][网页]]已经对 FTTH 有所描述了：

#+BEGIN_QUOTE
IP 城域网的接入方式目前一般分为 LAN 接入（网线）和 FTTX 接入（光纤）：LAN 接入是指从城域网的节点经过交换器和集线器将网线直接拉到用户的家里。它的优势在于 LAN 技术成熟，网线及中间设备的价格比较便宜，同时可以实现 1M、10M、100M 的平滑过渡。

FTTX 接入是指光纤直接拉到用户的家里（FTTH 光纤到户）或电脑（FTTD 光纤到桌面），由于目前光纤网络产品的价格昂贵，尚未到普及阶段，但它的无限带宽容量却是未来宽带网络发展的方向。目前光纤主要用于骨干网和各个节点的连接上。
#+END_QUOTE

引文中提到的 LAN 接入指的应该是 FTTx + LAN，LAN 是 Local Area Network 的缩写，意思是局域网。所谓 FTTx + LAN 指的就是利用光纤加网线实现的接入方案，例如 FTTB 指的就是将光纤接入办公大楼或者公寓大厦的总配线箱内部，在大楼内部则是利用同轴电缆、双绞线或光纤实现信号的分拨输入。

在查找 HFC 资料时，我偶然看到了一条十年前的知乎回答：

#+BEGIN_QUOTE
HFC 网络在国内的前景如何？ - jooyi的回答 - 知乎

https://www.zhihu.com/question/21585341/answer/20900689

随着基建预留光路以及光分路器的运用，FTTH 施工难度和成本飞快下降，一切混合组网都会挣扎着死去。
#+END_QUOTE

我不是很清楚国外是什么情况，不过国内的宽带应该是被 FTTH 一统江湖了。参考最近的第 50 次《中国互联网络发展状况统计报告》（截至 2022 年 6 月），我们可知自从 2022 年起，光纤在接入网中已经有了超过 95% 的占比：

#+BEGIN_QUOTE
一、（四）互联网宽带接入端口数量

1. 千兆光纤宽带网络覆盖和服务能力提升

   截至 2022 年 6 月，我国互联网宽带接入端口数量达 10.35 亿个，较 2021 年 12 月净增 1685 万个；其中，光纤接入（FTTH/O）端口达到 9.85 亿个，较 2021 年 12 月净增 2517 万个，占比由 94.3% 提升到 95.2%。具备千兆网络服务能力的 10G PON 端口数达 1103 万个，比上年末净增 318 万个。

2. 光缆线路总长度稳步增加

   截至 2022 年 6 月，我国光缆线路总长度达到 5791 万公里，同比增长 8.2%，较 2021 年 12 月净增 303 万公里。其中接入网光缆、本地网中继光缆和长途光缆线路所占比重分别为 62.6%、35.5% 和 1.9%。

三、（三）固定宽带接入情况

截至 2022 年 6 月，三家基础电信企业的固定互联网宽带接入用户总数达 5.63 亿户，较 2021 年 12 月净增 2705 万户。其中，100Mbps 及以上接入速率的固定互联网宽带接入用户达 5.27 亿户，占总用户数的 93.7%；1000Mbps 及以上接入速率的固定互联网宽带接入用户达 6111 万户，较 2021 年 12 月净增 2656 万户，占总用户数的 10.9%。

截至 2022 年 6 月，光纤接入（FTTH/O）用户规模达 5.34 亿户，占固定互联网宽带接入用户总数的 94.9%。
#+END_QUOTE

当然了这是最近的数据，你可能会好奇中国开始大规模部署光纤接入网（OAN）是在什么时候，参考[[https://wiki.mbalib.com/wiki/FTTX][智库百科]]大概是在〇八年，我国在 2009 年的 FTTx 用户超过 2000 万，居世界第一。

在具体开始介绍 FTTH 之前我们来简单了解一下光纤介质。光纤是光导纤维（Optic Fiber）的简称，它是指一类由玻璃或塑料制成的纤维，可作为光的传导工具。在各类光纤结构中最为典型的是一种多层同轴圆柱体，包含纤芯、包层等，下图中左上是示意图，左下是实物图，右边是 CG：

| [[./31.png]] |

光纤的纤芯部分是高折射率玻璃，表层部分是低折射率的玻璃或塑料，光在纤芯内传输，并在表层交界处不断进行全反射，沿“之”字形向前传输。光纤通信的优缺点如下：

- 频带极宽，通信容量大
- 损耗低，中继距离长
- 抗电磁干扰能力强
- 机械强度差
- 切断和接续需要一定的工具设备和技术
- 分路、耦合不灵活

*** 移动网络

** ISP 负责了什么工作
** 网络的形状

*** 局域网

有一个专门的词来描述点和线构成的连接关系，即 *拓扑结构* 。所谓“拓扑”就是把实体抽象成与具体大小形状无关的点，把连接实体的线路抽象成线，使用图来表示点和线之间关系的方法。下图展示了一些计算机网络的连接方式，这也是大多数教科书中会提到的连接方式：

| [[./19.png]] |

其中：

- 总线拓扑

*** 网络的网络


*** 边缘与核心

*** 网络的组成

** 局域网和广域网
** 网络质量
12306
* 什么是协议

*协议就是语言*

协议（PROTOCOL）这个词想必你已经看到过很多次了，比如 HTTP（HyperText Transfer PROTOCOL），TCP（Transmit Control PROTOCOL），IP（Internet PROTOCOL），等等。在计算机网络中，协议是指 *互相通信* 的 *对等实体* 之间交换信息时所必须遵守的 *规则的集合* ，也就是计算机通信或网络设备的共同语言。简单来说，协议就是告诉通信双方需要 *做些什么* 来满足某种要求。

如果你有些编程经验，那么编程语言中的函数类型就是非常不错的协议例子，调用者（caller）需要根据函数的参数类型来将满足要求的参数传递给函数，而被调者（callee）也必须返回符合函数返回值类型的值（当然也可能不返回）。通过函数类型声明我们就创建了用于调用者和函数体之间的协议。美中不足的是调用者和被调者不是对等的关系，被调者在没有被调用时不能主动向调用者发送信息。

在具体开始对各层的讨论之前我们再聊聊什么是协议。在上一节中我通过 Python 实现了一个简单的 UART 协议，它为作为线程的“计算机”提供了 *服务* 。所谓协议的实现指的是通过某种方法来满足协议中规定的约束，这和现实中的协议也有些相似。不同的协议可能位于不同的层，协议规定的是相同层之间的规则，协议的实现为上一层提供服务。一般来说高层的协议使用软件来实现，低层的协议使用软件加硬件或直接硬件实现，比如我们前面提到的 TL16C750E。 *协议栈* 指的是一层中的全部协议。

* 分层的计算机网络

众所周知，计算机网络是分层的，有 OSI 的七层模型，有 TCP 的四层模型，还有所谓的五层模型：

| [[./16.png]] |

为什么计算机网络需要分层？标准答案是这样的：计算机网络是个非常复杂的系统，相互通信的两个计算机必须高度协调工作，这样的协调非常复杂。分层可以将庞大复杂的问题转化为若干个较小的局部问题，这样易于研究和处理。参考《计算机网络 自顶向下方法 第七版》（以下简称自顶向下）我们还可以知道分层的优缺点：

#+BEGIN_QUOTE
利用分层的体系结构，我们可以讨论一个大而复杂系统的定义良好的特定部分。这种简化本身由于提供模块化而具有很高价值，这使某层所提供的服务实现易于改变。只要该层对其上面的层提供相同的服务，并且使用来自下面层次的相同服务器，当某层的实现变化时，该系统的其余部分保持不变。

协议分层具有概念化和结构化的优点。如果们看到的那样，分层提供了一种结构化方式来讨论系统组件。模块化使更新系统组件更为容易。然而，需要提及的是，某些研究人员和网络工程师激烈地反对分层。分层的一个潜在缺点是一层可能冗余较低层的功能。例如，许多协议栈在基于每段链路和基于端到端两种情况下都提供了差错回复。第二种潜在的缺点是某层的功能可能需要仅在其他某层才出现的信息（如时间戳值），这违反了层次分离的目标。
#+END_QUOTE

上面的引文从工程角度说明了分层的作用，但对一点经验都没有的我还是抽象了点，在思考网络分层的作用这个问题的时候，我突然想起了高中时看到的数学课本的一道例题：（出自数学选修 2-3）

| [[./17.png]] |

这张图给了我很大的启发，我突然意识到了网络的分层并不仅仅意味着概念和功能的分层，还意味着发送和接收数据的 *顺序* ：

| [[./18.png]] |

在发送或接收时，某一层的实现可能是这样的：

#+BEGIN_SRC c
  void LayerN_send(data) {
      new_data = do_something(data);
      ......;

      return LayerN-1_send(new_data);
  }
#+END_SRC

最后得到的调用链可能是： =data->APP_send ==> TRANS_send ==> NET_send ==> LINK_send ==> PHY_send= 。数据接收过程也类似。这样来看网络的层次模型也可以看作 *一种* 过程抽象，它把一整个发送过程分为了几大个步骤，我们在了解某个步骤时可以忽略上一步或下一步，而只关心当前要做什么。具体到做什么我就比较明白了，我们在编程过程中会把多条表达式使用函数包起来，在使用时只需调用函数即可，如果你写过代码你就应该知道使用函数的好处。《自顶向下》中也举了行人乘坐飞机和邮寄包裹的例子，将一个过程按照某些特征拆成几个小过程是有助于我们的认识的。



在查找资料的过程中我发现了一张非常不错的图，非常详尽地展示了各层的协议，这里贴一下地址：[[https://www.colasoft.com.cn/download/protocols_map.php][科来网络通讯图]]。图实在太大了这里就不放了。

尽管《自顶向下》中的顺序是从应用层到物理层，这里我还是先从物理层开始，在写这篇文章前我读的教材和我的顺序一致，在写的过程中我才开始读《自顶向下》（笑）。由于我们在下一篇文章中才会涉及到应用层，这个顺序也许会更好。

不管哪种顺序更好，我都推荐你看看《自顶向下》。

在本文的真正重要的内容开始之前我还是要声明一点，这篇文章的目的不是像教科书一样详细介绍计算机网络中的每一个重要知识点的，它顶多算是对计算机网络功能的概括，或者说就是我对计算机网络认知的一点笔记。我不会详细地描述计算机网络中某块的原理，而是结合我自己的生活经历简单说下我的认识。和文章开头说的一样，如果你发现了错误，请告诉我以便我及时改正。

* 一些通信相关的知识
* 例子：UART 串口通信系统

为了有一个更具体的印象，这里我用一个简单的串口协议来举个例子。通用异步收发器（Universal Asynchronous Receiver/Transmitter）通常被称作 UART，是一种异步收发传输器，是电脑硬件的一部分。它的工作原理是将传输数据一位位地顺序传输，传输数据以一个字符为单位。它名字中的异步指的是在两个字符间的时间间隔是不固定的，需要信号来启动一次传输，在 UART 中就是信号线由高电平变为低电平。虽然每个字符不按一定时间间隔发送，但字符内的比特之间的时间间隔是固定的，发送方和接收方必须使用相同的时间间隔，否则不能正常接收。UART 串口协议在嵌入式中应用广泛。

| [[./3.png]] |

如果你学过串口协议的话你可能会觉得上面的图少了点东西，没错，我没有画奇偶校验位，而且停止位可以是 1 或 2 位。为了简单起见我把它们都忽略了，详细的 UART 可以参考[[https://en.wikipedia.org/wiki/Universal_asynchronous_receiver-transmitter][维基百科]]上的内容。如果所有的读者都有 Verilog 经验那我直接给出 Verilog 代码即可，很可惜这是不可能的，所以下面我们用 Python 这门广人知的语言来简单实现一下串口协议，下面一节需要你有一定的电子知识。

首先，我们的实现是纯软件的，我们必须完全地使用编程语言来还原一些现实中的东西，比如时钟、串口收发器和信号线。我们的目的是实现两个设备，首先由一个设备向另一设备发送一个数字，另一设备收到后将数字加一后发送回去，如此往复直到数字达到某一值。这是个非常简单的环回测试。

要实现串口信号的收发我们有两种思路，一是创建专门的外围设备供计算机使用，二是利用计算机的时钟资源，直接使用处理器实现串口通信，据说比较低端的嵌入式系统会这样做，我在使用 FPGA 实现串口通信时就是使用的这种方式。这里我选择第一种实现方式，因为有专门的芯片，方便参考。

我在 TI（德州仪器）的网站上找到了一个比较简单的实物芯片：[[https://www.ti.com.cn/product/cn/TL16C750E][TL16C750E]]。它是具有 128 字节 FIFO 及自动流控制的单路 UART，方框图如下：

| [[./4.png]] |

所谓的 FIFO 即先入先出的意思（First In，First Out），是一种数据缓存器；自动流控制指的是在发送或接受数据缓冲区满时提示“不再发送”或“不再接收”；单路指的是只有一个用于发送和接受的 UART 口。如果你不懂这些概念也没关系，它们连同图中的大多数引脚对我们都不是非常重要。在这张图中，我们真正需要关注的东西只有下面这几项：

| [[./5.png]] |

- =TX= 和 =RX= ，与信号线相连的接口，分别用于发送和接收数据
- =Baud Rate Generator= ，芯片内部的时钟发生器
- =D7= ... =D0= ，数据引脚，用于读取和写入数据
- =IOR= ，读引脚，低位有效，表示数据有效，可从 UART 读取数据
- =IOW= ，写引脚，低位有效，表示将数据总线中的字节写入 UART 中
- =TXRDY= ，低位有效，表示当前可以发送
- =RXRDY= ，低位有效，表示当前有数据可以接收

我们可以画出简化后的框图：

| [[./6.png]] |

方框中还有一个很重要的东西没有体现，那就是时钟。根据芯片的文档（可在芯片页面找到），根据 =VSS= 引脚的电压可以获得不同的时钟频率：

| [[./7.png]] |

可见传输速率与振荡器时钟频率之比是 1:16（忽略掉最上面的那个），这也就是说采用了 16 倍过采样，串口信号的一个比特时间等于 16 个时钟周期。学过信号与系统的同学应该知道大于信号频率两倍理论上即可完全还原信号，选择 16 倍也许是为了方便分频吧。一般来说在串口传输的一比特的中间点采样是最好的，如下图所示：

| [[./8.png]] |

下面，让我们开始正式的实现过程吧，先从时钟开始。

** 实现时钟

对于比较低级的单片机，我们可以使用单片机的时钟资源，但对于 PC 如果不是写驱动的话我们没法获取比较精确的时钟，毕竟是分时操作系统。不过我们可以通过不断调用 =sleep= 函数来获得较低精度的时钟信号：

#+BEGIN_SRC python
  import time

  while True:
      st = time.time()
      time.sleep(0.0001)
      et = time.time()
      print('dt={dt}'.format(dt=et - st))
#+END_SRC

在我的计算机上使用这一段代码得到的结果在 0.014 到 0.016 之间浮动，也就是说我能通过 sleep 获得的最短时间是 15 毫秒左右，而且还不是很准确。如果我需要一定的精度的话，也许我的 sleep 时间至少要取 150 毫秒：

| [[./9.png]] |

这误差对时钟来说还真是难以想象（笑）。

经过一些考虑，我选择 0.25 秒作为时钟周期，1 秒作为串口比特时间间隔。我们传输一个字节需要大约 10 秒的时间。

** 实现 UART

如果我们要按照上面简化后的 UART 框图实现 UART 的话，要想让软件能够使用我们还得实现这个“软芯片”的“驱动程序”，由于时钟资源的匮乏我不得不放弃。我选择不使用这些管脚，而是直接向“计算机”提供 =send= 和 =rec= 两个接口函数，前者接受数据并发送，后者返回收到的数据，为了方便起见两个函数都是同步函数，待所有动作完成后才返回。再次简化后的框图如下所示：

| [[./11.png]] |

现在，我们只需使用 =RX= 和 =TX= 两个管脚，我会使用长度为 1 的列表来表示它，这样就可以传递它们的地址了，而不用使用全局可见的符号。由于函数是同步的，一个线程同一时间只能进行发送或接收，对于我们在开头给出的任务，我们还可以偷个懒只实现半双工通信。下图是实现代码：

| [[./13.png]] |

虽然这段代码很简单，我还是用了状态机式的写法，下图是接收数据时的状态机图，发送与接收相似就没有画了：

| [[./10.png]] |

在创建 UART 对象时，我们会对 =TX= 和 =RX= 两个管脚初始化，随后调用同步的 =send= 和 =rec= 函数即可使用。如果我们要实现两个 UART 的互相通信，将其中一个的 =TX= 与另一个的 =RX= 相连， =RX= 与 =TX= 相连即可。

| [[./14.svg]] |

** 实现两台“计算机”

由于我们需要实现的功能非常简单，所以“计算机”的代码也不多：

| [[./15.png]] |

计算机的功能就是在收到数字后加一发送，直到收到的数字大于 3 为止。通过创建线程我们可以创建两个“同时运行”的计算机：

#+BEGIN_SRC python
x = threading.Thread(target=computer2)
x.start()
time.sleep(3)

x = threading.Thread(target=computer1)
x.start()
#+END_SRC

这里的 =time.sleep(3)= 是为了让接收先于发送开始。在经过几十秒后程序会终止，我们会得到如下输出：

| [[./12.png]] |

整个代码我放在了 [[https://gist.github.com/include-yy/06bb825ff3b5df75a7cc87c7b1a897b3][gist]] 上。关于 UART 这里还有篇不错的文章可以读一读：

- [[https://www.analog.com/cn/analog-dialogue/articles/uart-a-hardware-communication-protocol.html][UART：了解通用异步接收器/发送器的硬件通信协议]]

* 物理层

就像我在上一节说的那样，计算机网络的分层也可看作一种分步骤的做事，在说到每一层的功能时，我会首先谈谈它做了什么，随后再做其他补充，希望这样更容易理解一些。

在 TCP 分层中物理层和数据链路层统称网络访问层，而教材中一般会分为两层来讲。我觉得把物理层和链路层当作一层更好，（在我看来）数据链路层和物理层的关系是非常紧密的，它们可能并不能很好的解耦，一些计算机网络教材在物理层这一层写的相当模糊；另一方面我们日常生活中如果不去关注的话很难注意到哪些物理层设备，物理层（这两层）在感觉上可能离我们比较远。就拿以太网来说，它对物理层和 MAC 层做了规定，在介质的选择上必须和对应的 MAC 层配合才行。

话虽如此，现有教材大部分都会将数据链路层和物理层分开，因为这样更容易学。在这一节中我会介绍一些介质和工作在物理层的设备。

** 物理层的工作

* 链路层
* 网络层
* 传输层
* 应用层

各种应用
* 网络的应用
* 网络编程
* 网络与文化
* 网络与认知
* 更广阔的网络
* 后记

GEB 很新的东西
刘未鹏
认知科学
图形思维
本来我希望能一篇文章讲完网络，后来发现是痴心妄想
https://www.51cto.com/article/683044.html

@@html:<div class="yyheadimg"><img src="./aHR0cHM6Ly93d3cucGl4aXYubmV0L2FydHdvcmtzLzc3NjkwOTgy.png" alt="load failed"></div>@@
