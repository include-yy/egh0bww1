#+SETUPFILE: ./setup.org

#+TITLE: Problem 8
#+DATE: [2019-02-20 Web 04:25]
#+DESCRIPTION: 在一个数字串中找到连续 13 个数字的最大乘积

* Problem

*[[https://projecteuler.net/problem=8][Largest product in a series]]*

The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.

#+BEGIN_CENTER
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
#+END_CENTER

Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?

*连续数字最大乘积*

在如下的 1000 位数中，连续四个数字的最大乘积是 9 × 9 × 8 × 9 = 5832。

求这个 1000 位数中连续十三个数字的最大乘积。

* Solution

最简单的思路是将这些数字转换为字符串，然后从头开始一个一个算出连续 13 个数字的乘积，然后取最大值：

#+BEGIN_SRC elisp
  (defvar eu8-numstr "\
  73167176531330624919225119674426574742355349194934\
  96983520312774506326239578318016984801869478851843\
  85861560789112949495459501737958331952853208805511\
  12540698747158523863050715693290963295227443043557\
  66896648950445244523161731856403098711121722383113\
  62229893423380308135336276614282806444486645238749\
  30358907296290491560440772390713810515859307960866\
  70172427121883998797908792274921901699720888093776\
  65727333001053367881220235421809751254540594752243\
  52584907711670556013604839586446706324415722155397\
  53697817977846174064955149290862569321978468622482\
  83972241375657056057490261407972968652414535100474\
  82166370484403199890008895243450658541227588666881\
  16427171479924442928230863465674813919123162824586\
  17866458359124566529476545682848912883142607690042\
  24219022671055626321111109370544217506941658960408\
  07198403850962455444362981230987879927244284909188\
  84580156166097919133875499200524063689912560717606\
  05886116467109405077541002256983155200055935729725\
  71636269561882670428252483600823257530420752963450")

  (defun eu8-mulstr (str)
    (cl-reduce '*
	       (cl-loop for a across str
			collect (- a ?0))))

  (named-let f ((i 0) (big 0))
    (cond
     ((= i (- 1000 13)) big)
     (t (let* ((sub (substring eu8-numstr i (+ i 13)))
	       (num (eu8-mulstr sub)))
	  (f (1+ i) (if (> num big) num big))))))
  ;; 23514624000
#+END_SRC

非常简单，没什么好说的。
